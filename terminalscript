#!/usr/bin/env bash

BASE_DIR="$(cd "$(dirname "$0")"; pwd)" || exit 2
source "$BASE_DIR/holotapes.sh"

# Función para manejar Ctrl+C
trap 'restart_script' SIGINT

# Función para reiniciar el script
restart_script() {
    echo "Reiniciando el script..." | pv -qL 80
    exec "$0"
}

IFS=$'\n'
entrylist=('Regresar')
rawentry="$(find $BASE_DIR/entries -type f)"
for i in $rawentry; do
i=${i##*/} 
entrylist+=("$i")
done

COLUMNS=12

# Función para reproducir sonidos
play_sound() {
    play -q "$BASE_DIR/$1" -b 16 > /dev/null 2>&1
}

# Función para mostrar el encabezado superior alineado al centro
display_center(){
    columns="$(tput cols)"
    while IFS= read -r line; do
        printf "%*s\n" $(( (${#line} + columns) / 2)) "$line"
    done < "$1"
}

# Función para mostrar la fecha y hora con el año ajustado
display_date_time() {
    local current_date=$(date +"%Y-%m-%d %H:%M:%S")
    local adjusted_year=2190
    local adjusted_date="${adjusted_year}${current_date:4}"
    printf "%*s\n" $(( (${#adjusted_date} + $(tput cols)) / 2)) "$adjusted_date"
}

# Este es el "encabezado de título" personalizado que se muestra arriba
greeter=$'
Terminal Personal "Proto-Boy" Fabricado por RobCo
___________________________________________________'

mainmenufunc () 
{
    # Detener cualquier reproducción de Jukebox en curso
    pkill -f play > /dev/null 2>&1

    clear

    # Mostrar el texto del Menú
    play_sound "ui_hacking_charscroll.wav"
    display_center "$BASE_DIR/greeterheader.txt" | pv -qL 80
    display_date_time  # Mostrar la fecha y hora ajustada debajo del greeter
    echo "$greeter" | pv -qL 80
    play_sound "ui_hacking_charscroll.wav"
    echo "¿Qué te gustaría hacer?" | pv -qL 80

    # Mostrar las opciones del menú
    COLUMNS=12
    select menuchoice in "Ver Entradas del Diario" "Registrar una Entrada del Diario" "Comandos" "Jukebox" "Lector de Holocintas" "Entretenimiento"
    do
        case $menuchoice in
        "Ver Entradas del Diario")
            play_sound "ui_hacking_charenter_01.wav"
            viewentriesfunc
            ;;
        "Registrar una Entrada del Diario")
            play_sound "ui_hacking_charenter_01.wav"
            writeentryfunc
            ;;
        "Comandos")
            play_sound "ui_hacking_charenter_01.wav"
            commandsfunc
            ;;
        "Jukebox")
            play_sound "ui_hacking_charenter_01.wav"
            musicfunc
            ;;
        "Lector de Holocintas")
            play_sound "ui_hacking_charenter_01.wav"
            
            # Solicitar contraseña antes de ejecutar holotape_reader_func
            read -sp "Introduce la contraseña del overseer: " password
            echo
            correct_password="1234"
            
            if [ "$password" == "$correct_password" ]; then
                play_sound "ui_hacking_passgood.wav"
                holotape_reader_func  # Entrar si la contraseña es correcta
            else
                play_sound "ui_hacking_passbad.wav"
                echo "Contraseña incorrecta"
                read -p "Presiona enter para volver al menú principal"
                repeatmainmenufunc  # Volver al menú principal si es incorrecta
            fi
            ;;
        "Entretenimiento")
            play_sound "ui_hacking_charenter_01.wav"
            entertainment_menu
            ;;
        *)
            play_sound "ui_hacking_passbad.wav"
            echo "Opción inválida, por favor selecciona una opción válida." | pv -qL 80
            ;;
        esac
    done
}

# Opción 1 del Menú, Ver Entradas del Diario
viewentriesfunc () 
{
# Añadir todos los archivos de texto como strings individuales, ordenados de forma ascendente
entrylist=('Regresar')
rawentry="$(ls $BASE_DIR/entries/*)"
for i in $rawentry; do
i=${i##*/}
entrylist+=("$i")
done

# Mostrar el texto del Menú
    clear
    display_center "$BASE_DIR/greeterheader.txt"
    display_date_time  # Mostrar la fecha y hora ajustada debajo del greeter
    echo "$greeter" 
    play_sound "ui_hacking_charscroll.wav"
    echo "¿Qué entrada del diario te gustaría acceder?" | pv -qL 80
    
    # Mostrar las opciones del menú
    COLUMNS=12
    select readoption in "${entrylist[@]}"
    do
    case $readoption in
    "Regresar")
    play_sound "ui_hacking_charenter_01.wav"
    repeatmainmenufunc
    ;;
        *)
    play_sound "ui_hacking_charenter_01.wav"
    ;;
    esac

    # Mostrar la entrada seleccionada
    clear
    display_center "$BASE_DIR/greeterheader.txt"
    echo "$greeter"
    echo
    play_sound "ui_hacking_charscroll.wav"
    echo "$readoption:"  | pv -qL 80
    play_sound "ui_hacking_charscroll.wav"
    cat "$BASE_DIR/entries/$readoption"  | pv -qL 80
    echo
    read -p "Presiona enter para continuar"
    play_sound "ui_hacking_charenter_01.wav"
    
    # Volver al menú principal
    repeatmainmenufunc
    done
}

# Menú para escribir una entrada
writeentryfunc () 
{
# Mostrar el texto del menú
clear
display_center "$BASE_DIR/greeterheader.txt"
display_date_time  # Mostrar la fecha y hora ajustada debajo del greeter
echo "$greeter" 
play_sound "ui_hacking_charscroll.wav"
echo "¿Cómo te gustaría nombrar la entrada?" | pv -qL 80

# Leer la entrada del usuario
read entrynameinput 
play_sound "ui_hacking_charenter_01.wav"

# Mostrar el texto del menú de nuevo
clear
display_center "$BASE_DIR/greeterheader.txt"
display_date_time  # Mostrar la fecha y hora ajustada debajo del greeter
echo "$greeter" 
play_sound "ui_hacking_charscroll.wav"
echo "Presiona CTRL+D para finalizar la entrada"  | pv -qL 80
play_sound "ui_hacking_charscroll.wav"
echo $entrynameinput:  | pv -qL 80
echo
# Usar el editor de texto cat para escribir entradas. ctrl+d para finalizar
cat >"$BASE_DIR/entries/$entrynameinput"
cat "$BASE_DIR/entries/$entrynameinput"
clear
play_sound "ui_hacking_charenter_01.wav"

# Volver al menú principal
repeatmainmenufunc
}

# Menú para ejecutar comandos
# Menú para ejecutar comandos
commandsfunc () 
{
# Mostrar el texto del Menú
clear
display_center "$BASE_DIR/greeterheader.txt"
display_date_time  # Mostrar la fecha y hora ajustada debajo del greeter
echo "$greeter" 
play_sound "ui_hacking_charscroll.wav"
echo "¿Qué comando te gustaría ejecutar?" | pv -qL 80

# Mostrar las opciones del menú
COLUMNS=12
select commandoption in "Regresar" "Estado del chip de agua" "Estado de ventilacion" "Secuencia de autodestruccion" "Restaurar valores predeterminados"
do
    case $commandoption in
    "Regresar")
    play_sound "ui_hacking_charenter_01.wav"
    repeatmainmenufunc
    ;;
    "Estado del chip de agua")
    play_sound "ui_hacking_charenter_01.wav"
    "$BASE_DIR/comando1.sh"
    read -p "Presiona enter para continuar"
    commandsfunc
    ;;
    "Estado de ventilacion")
    play_sound "ui_hacking_charenter_01.wav"
    "$BASE_DIR/comando2.sh"
    read -p "Presiona enter para continuar"
    commandsfunc
    ;;
    "Secuencia de autodestruccion")
    play_sound "ui_hacking_charenter_01.wav"
    read -sp "Introduce la contraseña maestra: " password
    echo
    correct_password="010101"
    if [ "$password" == "$correct_password" ]; then
        play_sound "ui_hacking_passgood.wav"
        "$BASE_DIR/comando3.sh"
    else
        play_sound "ui_hacking_passbad.wav"
        echo "Contraseña incorrecta"
    fi
    read -p "Presiona enter para continuar"
    commandsfunc
    ;;
    "Restaurar valores predeterminados")
    play_sound "ui_hacking_charenter_01.wav"
    read -sp "Introduce la contraseña del administrador: " admin_password
    echo
    admin_correct_password="larp1234"
    if [ "$admin_password" == "$admin_correct_password" ]; then
        play_sound "ui_hacking_passgood.wav"
        "$BASE_DIR/comando4.sh"
    else
        play_sound "ui_hacking_passbad.wav"
        echo "Contraseña incorrecta"
    fi
    read -p "Presiona enter para continuar"
    commandsfunc
    ;;
    *)
    play_sound "ui_hacking_passbad.wav"
    ;;
    esac
done
}

# Igual que la función de la pantalla del menú principal, pero sin las animaciones molestas
repeatmainmenufunc ()
{
    # Detener cualquier reproducción de Jukebox en curso
    pkill -f play 2>/dev/null

    clear

    display_center "$BASE_DIR/greeterheader.txt"
    display_date_time  # Mostrar la fecha y hora ajustada debajo del greeter
    echo "$greeter" 
    play_sound "ui_hacking_charscroll.wav"
    echo "¿Qué te gustaría hacer?" | pv -qL 80
    
    COLUMNS=12
    select menuchoice in "Ver Entradas del Diario" "Registrar una Entrada del Diario" "Comandos" "Jukebox" "Lector de Holocintas" "Entretenimiento"
    do
        case $menuchoice in
        "Ver Entradas del Diario")
            play_sound "ui_hacking_charenter_01.wav"
            viewentriesfunc
            ;;
        "Registrar una Entrada del Diario")
            play_sound "ui_hacking_charenter_01.wav"
            writeentryfunc
            ;;
        "Comandos")
            play_sound "ui_hacking_charenter_01.wav"
            commandsfunc
            ;;
        "Jukebox")
            play_sound "ui_hacking_charenter_01.wav"
            musicfunc
            ;;
        "Lector de Holocintas")
            play_sound "ui_hacking_charenter_01.wav"
            
            # Solicitar contraseña antes de ejecutar holotape_reader_func
            read -sp "Introduce la contraseña del overseer: " password
            echo
            correct_password="1234"
            
            if [ "$password" == "$correct_password" ]; then
                play_sound "ui_hacking_passgood.wav"
                holotape_reader_func  # Entrar si la contraseña es correcta
            else
                play_sound "ui_hacking_passbad.wav"
                echo "Contraseña incorrecta"
                read -p "Presiona enter para volver al menú principal"
                repeatmainmenufunc  # Volver al menú principal si es incorrecta
            fi
            ;;
        "Entretenimiento")
            play_sound "ui_hacking_charenter_01.wav"
            entertainment_menu
            ;;
        *)
            play_sound "ui_hacking_passbad.wav"
            echo "Opción inválida, por favor selecciona una opción válida." | pv -qL 80
            ;;
        esac
    done
}

# Menú para reproducir Jukebox
musicfunc () 
{
# Detener cualquier reproducción de Jukebox en curso
pkill -f play > /dev/null 2>&1

# Mostrar el texto del Menú
clear
display_center "$BASE_DIR/greeterheader.txt"
display_date_time  # Mostrar la fecha y hora ajustada debajo del greeter
echo "$greeter" 
play_sound "ui_hacking_charscroll.wav"
echo "¿Qué te gustaría hacer?" | pv -qL 80

# Mostrar las opciones del menú
COLUMNS=12
select musicoption in "Regresar" "Track 1" "Track 2" "Track 3" "Track 4" "Track 5"
do
    case $musicoption in
    "Regresar")
    play_sound "ui_hacking_charenter_01.wav"
    repeatmainmenufunc
    ;;
    "Track 1")
    play_sound "ui_hacking_charenter_01.wav"
    play -q "$BASE_DIR/ui_music_1.mp3" &
    read -p "Presiona enter para continuar"
    pkill -f play > /dev/null 2>&1
    musicfunc
    ;;
    "Track 2")
    play_sound "ui_hacking_charenter_01.wav"
    play -q "$BASE_DIR/ui_music_2.mp3" &
    read -p "Presiona enter para continuar"
    pkill -f play > /dev/null 2>&1
    musicfunc
    ;;
    "Track 3")
    play_sound "ui_hacking_charenter_01.wav"
    play -q "$BASE_DIR/ui_music_3.mp3" &
    read -p "Presiona enter para continuar"
    pkill -f play > /dev/null 2>&1
    musicfunc
    ;;
    "Track 4")
    play_sound "ui_hacking_charenter_01.wav"
    play -q "$BASE_DIR/ui_music_4.mp3" &
    read -p "Presiona enter para continuar"
    pkill -f play > /dev/null 2>&1
    musicfunc
    ;;
    "Track 5")
    play_sound "ui_hacking_charenter_01.wav"
    play -q "$BASE_DIR/ui_music_5.mp3" &
    read -p "Presiona enter para continuar"
    pkill -f play > /dev/null 2>&1
    musicfunc
    ;;
    *)
    play_sound "ui_hacking_passbad.wav"
    ;;
    esac
done
}

holotape_reader_func () 
{
# Mostrar el texto del Menú
clear
display_center "$BASE_DIR/greeterheader.txt"
display_date_time  # Mostrar la fecha y hora ajustada debajo del greeter
echo "$greeter" 
play_sound "ui_hacking_charscroll.wav"
echo "Presiona CTRL+C para salir." | pv -qL 80
echo
play_sound "ui_hacking_charscroll.wav"

# Permitir la escritura libre sin guardar, validando caracteres y manejando líneas largas
while true; do
    read -p "> " input_text
    # Validar caracteres especiales
    valid_text=$(echo "$input_text" | tr -cd '[:alnum:] [:punct:]')
    
    # Si la longitud de la línea es demasiado larga, cortarla
    while [ ${#valid_text} -gt $(tput cols) ]; do
        echo "${valid_text:0:$(tput cols)}"
        valid_text="${valid_text:$(tput cols)}"
    done
    
    # Imprimir el texto restante
    echo "$valid_text"
    
    # Si el usuario presiona Ctrl+C, salir del bucle y volver al menú principal
    if [ -z "$input_text" ]; then
        break
    fi
done

# Volver al menú principal
play_sound "ui_hacking_charenter_01.wav"
repeatmainmenufunc
}

# Función para mostrar el menú de entretenimiento
entertainment_menu () 
{
    clear

    # Mostrar el texto del Menú
    display_center "$BASE_DIR/greeterheader.txt"
    display_date_time  # Mostrar la fecha y hora ajustada debajo del greeter
    echo "$greeter" 
    play_sound "ui_hacking_charscroll.wav"
    echo "Selecciona un juego:" | pv -qL 80

    # Mostrar las opciones del menú de juegos
    COLUMNS=12
    select gamechoice in "Regresar" "Jugar Snake" "Jugar Pacman"
    do
        case $gamechoice in
        "Regresar")
            play_sound "ui_hacking_charenter_01.wav"
            repeatmainmenufunc
            ;;
        "Jugar Snake")
            play_sound "ui_hacking_charenter_01.wav"
            play_game "nsnake"
            ;;
        "Jugar Pacman")
            play_sound "ui_hacking_charenter_01.wav"
            play_game "pacman4console"
            ;;
        *)
            play_sound "ui_hacking_passbad.wav"
            echo "Opción inválida, por favor selecciona una opción válida." | pv -qL 80
            ;;
        esac
    done
}

play_game() {
    local game=$1
    if command -v $game &> /dev/null; then
        clear
        $game
        echo "Presiona enter para volver al menú principal..."
    else
        echo "Error: El juego o comando '$game' no existe."
        echo "Presiona enter para volver al menú principal..."
    fi
    read -r
    mainmenufunc
}

# Secuencia de inicio con tiempos de espera y sonidos
clear
play_sound "ui_hacking_charscroll.wav"
echo "Inicializando arranque..." | pv -qL 80
sleep 1.2
play_sound "ui_hacking_charscroll.wav"
echo "Cargando Sistema Operativo Unificado de RobCo..."  | pv -qL 80
sleep 1.2
play_sound "ui_hacking_charscroll.wav"
echo "64K RAM detectada..."  | pv -qL 80
sleep 1.2
play_sound "ui_hacking_charscroll.wav"
echo "Lanzando Interfaz..."  | pv -qL 80
sleep 1.2
clear
echo $'

  _____       _      _____                   
 |  __ \     | |    / ____|                  
 | |__) |___ | |__ | |     ___               
 |  _  // _ \| \'_ \| |    / _ \              
 | | \ \ (_) | |_) | |___| (_) |             
 |_|__\_\___/|_.__/ \_____\___/  _           

'
           
echo "==============================================" | pv -qL 60
play_sound "ui_hacking_passgood.wav"
sleep 1

# Ir al menú principal
mainmenufunc;